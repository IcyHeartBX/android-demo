// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: first.proto at 9:1
package com.pix.protobufandroid.protobuf;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * ==================================================
 * 定义socket协议
 * ==================================================
 * 请求登录
 */
public final class Login extends Message<Login, Login.Builder> {
  public static final ProtoAdapter<Login> ADAPTER = new ProtoAdapter_Login();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_CMD = "";

  public static final Long DEFAULT_USERID = 0L;

  public static final String DEFAULT_PASSWD = "";

  public static final String DEFAULT_NAME = "";

  /**
   * 用户命令字
   */
  @WireField(
          tag = 1,
          adapter = "com.squareup.wire.ProtoAdapter#STRING",
          label = WireField.Label.REQUIRED
  )
  public final String cmd;

  /**
   * 用户ID
   */
  @WireField(
          tag = 2,
          adapter = "com.squareup.wire.ProtoAdapter#INT64",
          label = WireField.Label.REQUIRED
  )
  public final Long userid;

  /**
   * 用户的密码
   */
  @WireField(
          tag = 4,
          adapter = "com.squareup.wire.ProtoAdapter#STRING",
          label = WireField.Label.REQUIRED
  )
  public final String passwd;

  /**
   * 用户的昵称
   */
  @WireField(
          tag = 3,
          adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String name;

  public Login(String cmd, Long userid, String passwd, String name) {
    this(cmd, userid, passwd, name, ByteString.EMPTY);
  }

  public Login(String cmd, Long userid, String passwd, String name, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.cmd = cmd;
    this.userid = userid;
    this.passwd = passwd;
    this.name = name;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.cmd = cmd;
    builder.userid = userid;
    builder.passwd = passwd;
    builder.name = name;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof Login)) return false;
    Login o = (Login) other;
    return Internal.equals(unknownFields(), o.unknownFields())
            && Internal.equals(cmd, o.cmd)
            && Internal.equals(userid, o.userid)
            && Internal.equals(passwd, o.passwd)
            && Internal.equals(name, o.name);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (cmd != null ? cmd.hashCode() : 0);
      result = result * 37 + (userid != null ? userid.hashCode() : 0);
      result = result * 37 + (passwd != null ? passwd.hashCode() : 0);
      result = result * 37 + (name != null ? name.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (cmd != null) builder.append(", cmd=").append(cmd);
    if (userid != null) builder.append(", userid=").append(userid);
    if (passwd != null) builder.append(", passwd=").append(passwd);
    if (name != null) builder.append(", name=").append(name);
    return builder.replace(0, 2, "Login{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<Login, Builder> {
    public String cmd;

    public Long userid;

    public String passwd;

    public String name;

    public Builder() {
    }

    /**
     * 用户命令字
     */
    public Builder cmd(String cmd) {
      this.cmd = cmd;
      return this;
    }

    /**
     * 用户ID
     */
    public Builder userid(Long userid) {
      this.userid = userid;
      return this;
    }

    /**
     * 用户的密码
     */
    public Builder passwd(String passwd) {
      this.passwd = passwd;
      return this;
    }

    /**
     * 用户的昵称
     */
    public Builder name(String name) {
      this.name = name;
      return this;
    }

    @Override
    public Login build() {
      if (cmd == null
              || userid == null
              || passwd == null) {
        throw Internal.missingRequiredFields(cmd, "cmd",
                userid, "userid",
                passwd, "passwd");
      }
      return new Login(cmd, userid, passwd, name, buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_Login extends ProtoAdapter<Login> {
    ProtoAdapter_Login() {
      super(FieldEncoding.LENGTH_DELIMITED, Login.class);
    }

    @Override
    public int encodedSize(Login value) {
      return ProtoAdapter.STRING.encodedSizeWithTag(1, value.cmd)
              + ProtoAdapter.INT64.encodedSizeWithTag(2, value.userid)
              + ProtoAdapter.STRING.encodedSizeWithTag(4, value.passwd)
              + (value.name != null ? ProtoAdapter.STRING.encodedSizeWithTag(3, value.name) : 0)
              + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, Login value) throws IOException {
      ProtoAdapter.STRING.encodeWithTag(writer, 1, value.cmd);
      ProtoAdapter.INT64.encodeWithTag(writer, 2, value.userid);
      ProtoAdapter.STRING.encodeWithTag(writer, 4, value.passwd);
      if (value.name != null) ProtoAdapter.STRING.encodeWithTag(writer, 3, value.name);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public Login decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.cmd(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.userid(ProtoAdapter.INT64.decode(reader)); break;
          case 4: builder.passwd(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.name(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public Login redact(Login value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
